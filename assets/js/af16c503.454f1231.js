"use strict";(self.webpackChunkfullstack_devops_github_io=self.webpackChunkfullstack_devops_github_io||[]).push([[2013],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>d});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},l=Object.keys(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),c=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,l=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),m=c(r),h=n,d=m["".concat(s,".").concat(h)]||m[h]||u[h]||l;return r?a.createElement(d,o(o({ref:t},p),{},{components:r})):a.createElement(d,o({ref:t},p))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=r.length,o=new Array(l);o[0]=h;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[m]="string"==typeof e?e:n,o[1]=i;for(var c=2;c<l;c++)o[c]=r[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}h.displayName="MDXCreateElement"},140:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>m,contentTitle:()=>c,default:()=>k,frontMatter:()=>s,metadata:()=>p,toc:()=>u});var a=r(7462),n=(r(7294),r(3905));const l={toc:[{value:"Usage",id:"usage",level:2},{value:"Charts",id:"charts",level:2},{value:"Dev",id:"dev",level:2},{value:"helm-docs",id:"helm-docs",level:3},{value:"Pre-commit hook",id:"pre-commit-hook",level:3}]},o="wrapper";function i(e){let{components:t,...i}=e;return(0,n.kt)(o,(0,a.Z)({},l,i,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"fullstack-devops-collection-of-helm-charts"},"FullStack DevOps collection of helm charts"),(0,n.kt)("h2",{id:"usage"},"Usage"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://helm.sh"},"Helm")," must be installed to use the charts. Please refer to\nHelm's ",(0,n.kt)("a",{parentName:"p",href:"https://helm.sh/docs"},"documentation")," to get started."),(0,n.kt)("p",null,"Once Helm has been set up correctly, add the repo as follows:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"helm repo add fs-devops https://fullstack-devops.github.io/helm-charts/\n")),(0,n.kt)("p",null,"If you had already added this repo earlier, run ",(0,n.kt)("inlineCode",{parentName:"p"},"helm repo update")," to retrieve\nthe latest versions of the packages. You can then run ",(0,n.kt)("inlineCode",{parentName:"p"},"helm search repo fsops")," to see the charts."),(0,n.kt)("p",null,"To install a chart:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"helm install my-<chart-name> fs-devops/<chart-name>\n")),(0,n.kt)("p",null,"To uninstall the chart:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"helm delete my-<chart-name>\n")),(0,n.kt)("h2",{id:"charts"},"Charts"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"),(0,n.kt)("th",{parentName:"tr",align:null},"Docs"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"excalidraw"),(0,n.kt)("td",{parentName:"tr",align:null},"Chart for excalidraw"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"charts/excalidraw/"},"link"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"github-actions-runner"),(0,n.kt)("td",{parentName:"tr",align:null},"Chart for github-actions-runner"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"charts/github-actions-runner/"},"link"))))),(0,n.kt)("h2",{id:"dev"},"Dev"),(0,n.kt)("h3",{id:"helm-docs"},"helm-docs"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"go install github.com/norwoodj/helm-docs/cmd/helm-docs@latest\nhelm-docs -t templates/README.md.gotmpl\n")),(0,n.kt)("h3",{id:"pre-commit-hook"},"Pre-commit hook"),(0,n.kt)("p",null,"If you want to automatically generate ",(0,n.kt)("inlineCode",{parentName:"p"},"README.md")," files with a pre-commit hook, make sure you\n",(0,n.kt)("a",{parentName:"p",href:"https://pre-commit.com/#install"},"install the pre-commit binary"),", and add a ",(0,n.kt)("a",{target:"_blank",href:r(2950).Z},".pre-commit-config.yaml file"),"\nto your project. Then run:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"pre-commit install\npre-commit install-hooks\n")),(0,n.kt)("p",null,"Future changes to your chart's ",(0,n.kt)("inlineCode",{parentName:"p"},"requirements.yaml"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"values.yaml"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"Chart.yaml"),", or ",(0,n.kt)("inlineCode",{parentName:"p"},"README.md.gotmpl")," files will cause an update to documentation when you commit."))}i.isMDXComponent=!0;const s={title:"Overview"},c=void 0,p={unversionedId:"helm-charts/overview",id:"helm-charts/overview",title:"Overview",description:"CI Tool for cross plattform builds",source:"@site/docs/04-helm-charts/01-overview.mdx",sourceDirName:"04-helm-charts",slug:"/helm-charts/overview",permalink:"/docs/helm-charts/overview",draft:!1,editUrl:"https://github.com/fullstack-devops/fullstack-devops.github.io/tree/main/docs/04-helm-charts/01-overview.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Overview"},sidebar:"default",previous:{title:"K8s helm charts",permalink:"/docs/category/k8s-helm-charts"},next:{title:"charts",permalink:"/docs/category/charts"}},m={},u=[],h={toc:u},d="wrapper";function k(e){let{components:t,...r}=e;return(0,n.kt)(d,(0,a.Z)({},h,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"CI Tool for cross plattform builds"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"lib type"),": helm charts repository"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"repo"),": ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/fullstack-devops/helm-charts"},"https://github.com/fullstack-devops/helm-charts"))),(0,n.kt)("hr",null),(0,n.kt)(i,{name:"Readme",mdxType:"ReadmePartial"}))}k.isMDXComponent=!0},2950:(e,t,r)=>{r.d(t,{Z:()=>a});const a=r.p+"assets/files/.pre-commit-config-aa20b72923970b7a8698b344d6cc0d69.yaml"}}]);
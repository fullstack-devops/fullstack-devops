"use strict";(self.webpackChunkfullstack_devops_github_io=self.webpackChunkfullstack_devops_github_io||[]).push([[4403],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>f});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(r),d=i,f=u["".concat(l,".").concat(d)]||u[d]||m[d]||a;return r?n.createElement(f,o(o({ref:t},p),{},{components:r})):n.createElement(f,o({ref:t},p))}));function f(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,o=new Array(a);o[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:i,o[1]=s;for(var c=2;c<a;c++)o[c]=r[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},75:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var n=r(7462),i=(r(7294),r(3905));const a={title:"_ release publish"},o=void 0,s={unversionedId:"awesome-ci/cli/awesome-ci_release_publish",id:"awesome-ci/cli/awesome-ci_release_publish",title:"_ release publish",description:"awesome-ci release publish",source:"@site/docs/03-awesome-ci/02-cli/awesome-ci_release_publish.md",sourceDirName:"03-awesome-ci/02-cli",slug:"/awesome-ci/cli/awesome-ci_release_publish",permalink:"/docs/awesome-ci/cli/awesome-ci_release_publish",draft:!1,editUrl:"https://github.com/fullstack-devops/fullstack-devops.github.io/tree/main/docs/03-awesome-ci/02-cli/awesome-ci_release_publish.md",tags:[],version:"current",frontMatter:{title:"_ release publish"},sidebar:"default",previous:{title:"_ release create",permalink:"/docs/awesome-ci/cli/awesome-ci_release_create"},next:{title:"_ version",permalink:"/docs/awesome-ci/cli/awesome-ci_version"}},l={},c=[{value:"awesome-ci release publish",id:"awesome-ci-release-publish",level:2},{value:"Synopsis",id:"synopsis",level:3},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3},{value:"Auto generated by spf13/cobra on 25-Feb-2023",id:"auto-generated-by-spf13cobra-on-25-feb-2023",level:6}],p={toc:c},u="wrapper";function m(e){let{components:t,...r}=e;return(0,i.kt)(u,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"awesome-ci-release-publish"},"awesome-ci release publish"),(0,i.kt)("p",null,"publish a GitHub release"),(0,i.kt)("h3",{id:"synopsis"},"Synopsis"),(0,i.kt)("p",null,"Print all infos about a pull request in GitHub."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"awesome-ci release publish [flags]\n")),(0,i.kt)("h3",{id:"options"},"Options"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"  -a, --asset stringArray   define output by get\n  -h, --help                help for publish\n      --release-id int      publish an early defined release (also looking for env ACI_RELEASE_ID)\n")),(0,i.kt)("h3",{id:"options-inherited-from-parent-commands"},"Options inherited from parent commands"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"  -b, --body string             custom release message (markdown string or file)\n      --dry-run                 make dry-run before writing version to Git by calling it\n      --hotfix                  create a hotfix release\n      --merge-sha string        set the merge sha\n  -l, --patch-level string      predefine patch level of version to Update\n      --prnumber int            overwrite the issue number\n      --release-branch string   set release branch (default: git default)\n      --release-prefix string   set a custom release prefix (default -> Release or Hotfix)\n  -v, --verbose                 verbose output\n      --version string          override version to Update\n")),(0,i.kt)("h3",{id:"see-also"},"SEE ALSO"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"./awesome-ci_release"},"awesome-ci release"),"\t - release")),(0,i.kt)("h6",{id:"auto-generated-by-spf13cobra-on-25-feb-2023"},"Auto generated by spf13/cobra on 25-Feb-2023"))}m.isMDXComponent=!0}}]);
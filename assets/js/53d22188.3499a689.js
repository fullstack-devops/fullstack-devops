"use strict";(self.webpackChunkfullstack_devops_github_io=self.webpackChunkfullstack_devops_github_io||[]).push([[6333],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>h});var a=n(7294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,s=function(e,t){if(null==e)return{};var n,a,s={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var c=a.createContext({}),u=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},l=function(e){var t=u(e.components);return a.createElement(c.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,s=e.mdxType,r=e.originalType,c=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),p=u(n),d=s,h=p["".concat(c,".").concat(d)]||p[d]||m[d]||r;return n?a.createElement(h,o(o({ref:t},l),{},{components:n})):a.createElement(h,o({ref:t},l))}));function h(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var r=n.length,o=new Array(r);o[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[p]="string"==typeof e?e:s,o[1]=i;for(var u=2;u<r;u++)o[u]=n[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2350:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>m,frontMatter:()=>r,metadata:()=>i,toc:()=>u});var a=n(7462),s=(n(7294),n(3905));const r={title:"GitHub Actions"},o="GitHub Actions examples",i={unversionedId:"awesome-ci/examples/github-actions",id:"awesome-ci/examples/github-actions",title:"GitHub Actions",description:"Build a Release",source:"@site/docs/03-awesome-ci/03-examples/github-actions.md",sourceDirName:"03-awesome-ci/03-examples",slug:"/awesome-ci/examples/github-actions",permalink:"/docs/awesome-ci/examples/github-actions",draft:!1,editUrl:"https://github.com/fullstack-devops/fullstack-devops.github.io/tree/main/docs/03-awesome-ci/03-examples/github-actions.md",tags:[],version:"current",frontMatter:{title:"GitHub Actions"},sidebar:"default",previous:{title:"Examples",permalink:"/docs/category/examples"},next:{title:"Examples",permalink:"/docs/awesome-ci/examples/"}},c={},u=[{value:"Build a Release",id:"build-a-release",level:3}],l={toc:u},p="wrapper";function m(e){let{components:t,...n}=e;return(0,s.kt)(p,(0,a.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"github-actions-examples"},"GitHub Actions examples"),(0,s.kt)("h3",{id:"build-a-release"},"Build a Release"),(0,s.kt)("p",null,"This is an example from th awesome-ci project you can find the original workflow ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/fullstack-devops/awesome-ci/blob/main/.github/workflows/Release.yaml"},"here"),"."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="release.yaml"',title:'"release.yaml"'},'name: Publish Release\n\non:\n  push:\n    branches:\n      - "main"\n\njobs:\n  create_release:\n    runs-on: ubuntu-latest\n    outputs:\n      release-id: ${{ steps.tag.outputs.ACI_RELEASE_ID }}\n      version: ${{ steps.tag.outputs.ACI_NEXT_VERSION }}\n    steps:\n      - name: Check out the repo\n        uses: actions/checkout@v3\n      - name: Setup awesome-ci\n        uses: fullstack-devops/awesome-ci-action@main\n\n      - name: create release\n        id: tag\n        run: awesome-ci release create --merge-sha ${{ github.sha }}\n        env:\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n\n  build:\n    runs-on: ubuntu-latest\n    needs: create_release\n    strategy:\n      matrix:\n        arch: ["amd64", "arm64"]\n    steps:\n      - name: Checkout code\n        uses: actions/checkout@v3\n      - name: Set up Go\n        uses: actions/setup-go@v3\n        with:\n          go-version: 1.19\n\n      - name: Build "${{ matrix.arch }}"\n        run: make VERSION="${{ needs.create_release.outputs.version }}"\n        env:\n          GOOS: linux\n          GOARCH: "${{ matrix.arch }}"\n\n      - name: Cache build outputs\n        uses: actions/cache@v3\n        env:\n          cache-name: cache-outputs-modules\n        with:\n          path: out/\n          key: awesome-ci-${{ github.sha }}-${{ hashFiles(\'out/awesome-ci*\') }}\n          restore-keys: |\n            awesome-ci-${{ github.sha }}\n\n  publish_release:\n    runs-on: ubuntu-latest\n    needs: [create_release, build]\n    steps:\n      - name: Checkout code\n        uses: actions/checkout@v3\n      - name: Setup awesome-ci\n        uses: fullstack-devops/awesome-ci-action@main\n\n      - name: get cached build outputs\n        uses: actions/cache@v3\n        env:\n          cache-name: cache-outputs-modules\n        with:\n          path: out/\n          key: awesome-ci-${{ github.sha }}\n\n      - name: Publish Release\n        run: awesome-ci release publish --release-id "$ACI_RELEASE_ID" --asset "file=out/$ARTIFACT1" --asset "file=out/$ARTIFACT2"\n        env:\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n          ACI_RELEASE_ID: ${{ needs.create_release.outputs.release-id }}\n          ARTIFACT1: awesome-ci_${{ needs.create_release.outputs.version }}_amd64\n          ARTIFACT2: awesome-ci_${{ needs.create_release.outputs.version }}_arm64\n')),(0,s.kt)("p",null,"You need more examples? Please open an issue!"))}m.isMDXComponent=!0}}]);